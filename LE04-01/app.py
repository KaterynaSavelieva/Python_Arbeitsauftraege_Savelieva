import tkinter as tk
from tkinter import ttk
from data import all_recipes

def run_gui():
    root = tk.Tk()
    root.title("Rezepte")          # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—ñ–∫–Ω–∞
    root.geometry("800x600")       # –†–æ–∑–º—ñ—Ä –≤—ñ–∫–Ω–∞ 800x600

    # ---- –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ----
    main_frame = ttk.Frame(root, padding=20)   # padding=20 ‚Üí –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π –≤—ñ–¥—Å—Ç—É–ø
    main_frame.pack(fill="both", expand=True)  # Frame —Ä–æ–∑—Ç—è–≥—É—î—Ç—å—Å—è –Ω–∞ –≤—Å–µ –≤—ñ–∫–Ω–æ

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏ –¥–ª—è main_frame (2 –∫–æ–ª–æ–Ω–∫–∏, 1 —Ä—è–¥–æ–∫)
    main_frame.columnconfigure(0, weight=1)    # –ø–µ—Ä—à–∞ –∫–æ–ª–æ–Ω–∫–∞ (–∑–ª—ñ–≤–∞) –∑–∞–π–º–∞—î 1 —á–∞—Å—Ç–∫—É –ø—Ä–æ—Å—Ç–æ—Ä—É
    main_frame.columnconfigure(1, weight=2)    # –¥—Ä—É–≥–∞ –∫–æ–ª–æ–Ω–∫–∞ (—Å–ø—Ä–∞–≤–∞) –∑–∞–π–º–∞—î 2 —á–∞—Å—Ç–∫–∏ –ø—Ä–æ—Å—Ç–æ—Ä—É
    main_frame.rowconfigure(0, weight=1)       # —Ä–æ–±–∏–º–æ —Ä—è–¥–æ–∫ "—Ä–æ–∑—Ç—è–∂–Ω–∏–º" –ø–æ –≤–∏—Å–æ—Ç—ñ

    # --- –ª—ñ–≤–∞ –∫–æ–ª–æ–Ω–∫–∞: –∑–∞–≥–æ–ª–æ–≤–æ–∫ + —Å–ø–∏—Å–æ–∫ + –∫–Ω–æ–ø–∫–∏ ---
    left = ttk.Frame(main_frame)               # —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–ª—ñ–≤–∞ –∫–æ–ª–æ–Ω–∫–∞) –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ main_frame
    left.grid(row=0, column=0, sticky="nsew", padx=(0, 12))
    # row=0, column=0 ‚Üí —Å—Ç–∞–≤–∏–º–æ —É –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ —ñ –ø–µ—Ä—à—É –∫–æ–ª–æ–Ω–∫—É
    # sticky="nsew" ‚Üí —Ä–æ–∑—Ç—è–≥—É—î—Ç—å—Å—è —É –≤—Å—ñ —Å—Ç–æ—Ä–æ–Ω–∏ (North, South, East, West)
    # padx=(0, 12) ‚Üí –∑–æ–≤–Ω—ñ—à–Ω—ñ–π –≤—ñ–¥—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –Ω–∞ 12 px (—â–æ–± –Ω–µ –∑–ª–∏–ø–∞–≤—Å—è –∑ –ø—Ä–∞–≤–æ—é –∫–æ–ª–æ–Ω–∫–æ—é)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    ttk.Label(left, text="Rezepte", font=("Arial", 22, "bold italic")).pack(pady=(0, 20))
    # pady=(0,20) ‚Üí –≤—ñ–¥—Å—Ç—É–ø –∑–≤–µ—Ä—Ö—É 0, –∑–Ω–∏–∑—É 20 px

    # ---- –°–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤ ----
    listbox = tk.Listbox(left, height=10, width=50, font=("Arial", 12, "italic"))
    listbox.pack(pady=10)

    # –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ (—Ç–∏–º—á–∞—Å–æ–≤–æ). –¢–µ–ø–µ—Ä —Ü–µ dict, —â–æ–± —Å–ø—Ä–∞–≤–∞ –±—É–ª–æ —â–æ –ø–æ–∫–∞–∑–∞—Ç–∏.
    # all_recipes = {
    #     "Pizza": {
    #         "zutaten": ["Mehl", "Eier", "Tomatensauce", "K√§se"],
    #         "zubereitung": "Teig anr√ºhren, belegen und im Ofen backen."
    #     },
    #     "Salat": {
    #         "zutaten": ["Tomaten", "Gurken", "Oliven√∂l"],
    #         "zubereitung": "Alles klein schneiden und mit √ñl mischen."
    #     },
    #     "Pfannkuchen": {
    #         "zutaten": ["Mehl", "Milch", "Eier"],
    #         "zubereitung": "Teig r√ºhren und in der Pfanne ausbacken."
    #     },
    # }

    # –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Å–ø–∏—Å–æ–∫ —ñ–º–µ–Ω–∞–º–∏ —Ä–µ—Ü–µ–ø—Ç—ñ–≤ (–∫–ª—é—á–∞–º–∏ dict)
    for name in all_recipes.keys():
        listbox.insert(tk.END, name)   # tk.END ‚Üí –¥–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç —É –∫—ñ–Ω–µ—Ü—å —Å–ø–∏—Å–∫—É

    # --- –ø—Ä–∞–≤–∞ –∫–æ–ª–æ–Ω–∫–∞: –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç–∞ ---
    right = ttk.Frame(main_frame)
    right.grid(row=0, column=1, sticky="nsew")

    ttk.Label(right, text="Details", font=("Arial", 16, "bold")).pack(pady=(0, 8))

    details = tk.Text(right, wrap="word", height=20, font=("Arial", 12))
    details.insert("1.0", "W√§hle ein Rezept links, um Details anzuzeigen‚Ä¶")
    details.configure(state="disabled")  # —Ä–æ–±–∏–º–æ –ø–æ–ª–µ —Ç—ñ–ª—å–∫–∏ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è
    details.pack(fill="both", expand=True)

    # ---- –ú–∞–ª–µ–Ω—å–∫—ñ —É—Ç–∏–ª—ñ—Ç–∏ -------------------------------------------------

    def show_details(name: str):
        """–ü–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç–∞ —Å–ø—Ä–∞–≤–∞."""
        data = all_recipes.get(name)
        details.configure(state="normal")
        details.delete("1.0", tk.END)

        if not data:
            details.insert("1.0", f"üçΩÔ∏è {name}\n\n(noch keine Details)")
        else:
            zutaten = ", ".join(data.get("zutaten", []))
            zub = data.get("zubereitung", "")
            details.insert("1.0", f"üçΩÔ∏è {name}\n\nZutaten: {zutaten}\n\nZubereitung:\n{zub}")

        details.configure(state="disabled")

    # ---- –ö–ù–û–ü–ö–ò (—Å—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—Ä–∞–∑, —â–æ–± –º–∞—Ç–∏ –Ω–∞ –Ω–∏—Ö –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∏–∂—á–µ) --------

    buttons = ttk.Frame(left)          # –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ (2x2)
    buttons.pack(padx=10, pady=15)
    buttons.columnconfigure(0, weight=1)
    buttons.columnconfigure(1, weight=1)

    grid_opts = {"padx": 10, "pady": 10}

    # –ó–∞–≥–ª—É—à–∫–∏ (—Ç–∏–º—á–∞—Å–æ–≤–æ, —Å–ø—Ä–∞–≤–∂–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –ø—Ä–∏–∑–Ω–∞—á–∏–º–æ –Ω–∏–∂—á–µ, –∫–æ–ª–∏ –±—É–¥—É—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó)
    btn_add    = ttk.Button(buttons, text="Add Rezept")
    btn_edit   = ttk.Button(buttons, text="Rezept bearbeiten")
    btn_delete = ttk.Button(buttons, text="Rezept l√∂schen")
    btn_exit   = ttk.Button(buttons, text="Beenden", command=root.destroy)

    btn_add.grid(row=0, column=0, **grid_opts)
    btn_edit.grid(row=0, column=1, **grid_opts)
    btn_delete.grid(row=1, column=0, **grid_opts)
    btn_exit.grid(row=1, column=1, **grid_opts)

    # --- –ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–æ–º –∫–Ω–æ–ø–æ–∫ (enable/disable) --------------------------

    def update_buttons_state():                               # ‚Üê NEW
        """–í–º–∏–∫–∞—î/–≤–∏–º–∏–∫–∞—î –∫–Ω–æ–ø–∫–∏ Edit/Delete –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è."""
        has_sel = bool(listbox.curselection())
        state = "normal" if has_sel else "disabled"
        btn_edit.configure(state=state)
        btn_delete.configure(state=state)

    # ---- –û–±—Ä–æ–±–Ω–∏–∫–∏ UI -----------------------------------------------------

    def on_select(_evt=None):                                 # ‚Üê CHANGED
        """–ö–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±—Ä–∞–≤ –µ–ª–µ–º–µ–Ω—Ç —É —Å–ø–∏—Å–∫—É."""
        sel = listbox.curselection()
        if not sel:
            update_buttons_state()
            return
        name = listbox.get(sel[0])
        show_details(name)
        update_buttons_state()

    listbox.bind("<<ListboxSelect>>", on_select)              # —Ä–µ–∞–≥—É—î–º–æ –Ω–∞ –∑–º—ñ–Ω—É –≤–∏–±–æ—Ä—É
    listbox.bind("<Double-1>", lambda e: f_edit_rezept())     # ‚Üê NEW: –¥–≤–æ–∫–ª—ñ–∫ = —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏
    root.bind("<Delete>", lambda e: f_delete_rezept())        # ‚Üê NEW: –∫–ª–∞–≤—ñ—à–∞ Delete = –≤–∏–¥–∞–ª–∏—Ç–∏

    # ---- –î—ñ—ó: –¥–æ–¥–∞—Ç–∏ / –≤–∏–¥–∞–ª–∏—Ç–∏ / —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ ------------------------------

    def f_add_rezept():
        """–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ä–µ—Ü–µ–ø—Ç (–¥—ñ–∞–ª–æ–≥–æ–≤–µ –≤—ñ–∫–Ω–æ)."""
        top = tk.Toplevel(root)
        top.title("Neues Rezept")
        top.geometry("300x250")

        ttk.Label(top, text="Rezeptname eingeben:").pack(pady=10)

        entry = ttk.Entry(top, width=30)
        entry.pack(pady=10)
        entry.focus_set()                                     # ‚Üê NEW: —Ñ–æ–∫—É—Å –æ–¥—Ä–∞–∑—É –≤ –ø–æ–ª–µ
        top.bind("<Return>", lambda e: f_save_rezept())       # ‚Üê NEW: Enter = –∑–±–µ—Ä–µ–≥—Ç–∏

        def f_save_rezept():
            name = entry.get().strip()
            if name:
                listbox.insert(tk.END, name)
                # —Å—Ç–≤–æ—Ä—é—î–º–æ –ø—É—Å—Ç—ñ –¥–µ—Ç–∞–ª—ñ, —â–æ–± –º–æ–∂–Ω–∞ –±—É–ª–æ –≤—ñ–¥—Ä–∞–∑—É —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏
                all_recipes.setdefault(name, {"zutaten": [], "zubereitung": ""})

                # –≤–∏–¥—ñ–ª—è—î–º–æ —â–æ–π–Ω–æ –¥–æ–¥–∞–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç, –ø—Ä–æ–∫—Ä—É—á—É—î–º–æ –¥–æ –Ω—å–æ–≥–æ, –ø–æ–∫–∞–∑—É—î–º–æ –¥–µ—Ç–∞–ª—ñ
                last = listbox.size() - 1                     # ‚Üê NEW
                listbox.selection_clear(0, tk.END)            # ‚Üê NEW
                listbox.selection_set(last)                   # ‚Üê NEW
                listbox.see(last)                             # ‚Üê NEW
                listbox.event_generate("<<ListboxSelect>>")   # ‚Üê NEW
                update_buttons_state()                        # ‚Üê NEW

            top.destroy()

        ttk.Button(top, text="Speichern", command=f_save_rezept).pack(pady=10)

    def f_delete_rezept():
        """–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç."""
        sel = listbox.curselection()
        if not sel:
            return

        name = listbox.get(sel[0])
        all_recipes.pop(name, None)                               # 1) –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∑ dict

        idx = sel[0]
        listbox.delete(idx)                                   # 2) –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∑—ñ —Å–ø–∏—Å–∫—É

        # 3) –ø—ñ–¥–±–∏—Ä–∞—î–º–æ –Ω–æ–≤–∏–π –≤–∏–±—ñ—Ä –∞–±–æ —á–∏—Å—Ç–∏–º–æ –ø–∞–Ω–µ–ª—å
        new_size = listbox.size()
        if new_size > 0:
            new_idx = min(idx, new_size - 1)                  # —Å—É—Å—ñ–¥–Ω—ñ–π/–æ—Å—Ç–∞–Ω–Ω—ñ–π
            listbox.selection_set(new_idx)
            listbox.see(new_idx)
            listbox.event_generate("<<ListboxSelect>>")
        else:
            details.configure(state="normal")
            details.delete("1.0", tk.END)
            details.insert("1.0", "W√§hle ein Rezept links, um Details anzuzeigen‚Ä¶")
            details.configure(state="disabled")
            update_buttons_state()

    def f_edit_rezept():
        """–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–±—Ä–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç (—ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ + —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è)."""
        sel = listbox.curselection()
        if not sel:
            return

        name = listbox.get(sel[0])
        data = all_recipes.get(name, {"zutaten": [], "zubereitung": ""})

        top = tk.Toplevel(root)
        top.title(f"Rezept bearbeiten ‚Äî {name}")
        top.geometry("420x360")

        ttk.Label(top, text="Zutaten (durch Kommata):").pack(pady=(12, 6))
        entry_zutaten = ttk.Entry(top, width=50)
        entry_zutaten.pack(pady=(0, 10))
        entry_zutaten.insert(0, ", ".join(data.get("zutaten", [])))

        ttk.Label(top, text="Zubereitung:").pack(pady=(10, 6))
        txt_zub = tk.Text(top, wrap="word", height=10)
        txt_zub.pack(fill="both", expand=True, padx=6, pady=(0, 10))
        txt_zub.insert("1.0", data.get("zubereitung", ""))

        def save_changes():
            raw = entry_zutaten.get().strip()
            zutaten_list = [z.strip() for z in raw.split(",") if z.strip()]
            zub_text = txt_zub.get("1.0", tk.END).strip()

            all_recipes[name] = {"zutaten": zutaten_list, "zubereitung": zub_text}

            # —è–∫—â–æ —Ü–µ–π —Ä–µ—Ü–µ–ø—Ç –æ–±—Ä–∞–Ω–∏–π ‚Äî –ø–µ—Ä–µ—Ä–∏—Å—É–≤–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ
            cur = listbox.curselection()
            if cur and listbox.get(cur[0]) == name:
                show_details(name)

            update_buttons_state()                            # ‚Üê NEW
            top.destroy()

        ttk.Button(top, text="Speichern", command=save_changes).pack(pady=(0, 10))

    # –ø—Ä–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–º–∞–Ω–¥–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ (—Ç–µ–ø–µ—Ä —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∂–µ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ)
    btn_add.configure(command=f_add_rezept)
    btn_edit.configure(command=f_edit_rezept, state="disabled")   # ‚Üê NEW: —Å—Ç–∞—Ä—Ç–æ–≤–æ –≤–∏–º–∫–Ω–µ–Ω–æ
    btn_delete.configure(command=f_delete_rezept, state="disabled")# ‚Üê NEW: —Å—Ç–∞—Ä—Ç–æ–≤–æ –≤–∏–º–∫–Ω–µ–Ω–æ

    # --- –ü–æ—á–∞—Ç–∫–æ–≤–∏–π –≤–∏–±—ñ—Ä / –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ -------------------------
    if listbox.size() > 0:                                        # ‚Üê NEW
        listbox.selection_set(0)
        listbox.event_generate("<<ListboxSelect>>")
    else:
        update_buttons_state()

    root.mainloop()   # –∑–∞–ø—É—Å–∫ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª—É


if __name__ == "__main__":
    run_gui()